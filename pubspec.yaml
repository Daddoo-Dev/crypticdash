name: crypticdash
description: "Cryptic Dashboard - Manage multiple GitHub projects with todo lists"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.0 <4.0.0'
  flutter: ">=3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # UI and Theming
  cupertino_icons: ^1.0.2
  
  # State Management
  provider: ^6.1.1
  
  # HTTP and API
  http: ^1.5.0
  dio: ^5.4.0
  
  # GitHub API
  github: ^9.25.0
  
  # Markdown Processing
  markdown: ^7.2.0
  
  # Local Storage
  shared_preferences: ^2.2.2
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  
  # File Operations
  path_provider: ^2.1.1
  
  # UI Components
  url_launcher: ^6.2.1
  
  # Utilities
  intl: ^0.18.1
  crypto: ^3.0.3
  
  # Animation
  image_sequence_animator: 2.0.0
  
  # OAuth Authentication
  flutter_dotenv: ^5.1.0
  
  # Local AI Model Support
  # ONNX Runtime for real AI inference
  
  # JSON Processing for Model Configs
  json_annotation: ^4.8.1
  onnxruntime: ^1.4.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  hive_generator: ^2.0.1
  build_runner: ^2.4.7
  flutter_launcher_icons: ^0.13.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/icons/
    - assets/images/
    - assets/ai_models/gemma_3_270m_it/
    - assets/yeti_animation/
    - TODO_TEMPLATE.md

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Roboto
  #     fonts:
  #       - asset: assets/fonts/Roboto-Regular.ttf
  #       - asset: assets/fonts/Roboto-Bold.ttf
  #         weight: 700
  #       - asset: assets/fonts/Roboto-Medium.ttf
  #         weight: 500
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

# Flutter Launcher Icons configuration
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/crypticdash.png"
  min_sdk_android: 21
  adaptive_icon_background: "#1976D2"
  adaptive_icon_foreground: "assets/images/crypticdash.png"
  web:
    generate: true
    image_path: "assets/images/crypticdash.png"
    background_color: "#1976D2"
    theme_color: "#1976D2"
  windows:
    generate: true
    image_path: "assets/images/crypticdash.png"
    icon_size: 48
  macos:
    generate: true
    image_path: "assets/images/crypticdash.png"
  linux:
    generate: true
    image_path: "assets/images/crypticdash.png"
  
  # Dark theme icons (optional - you can generate these separately)
  # To generate dark theme icons, run: flutter pub run flutter_launcher_icons:main -f pubspec_dark.yaml
